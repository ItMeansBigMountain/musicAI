name: Simple Deploy with Terraform

on:
  push:
    branches: [ main ]

env:
  # Azure Infrastructure
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_LOCATION: Central US
  
  # App Configuration
  APP_NAME: musicai
  ENV: prod
  CONTAINER_PORT: 8080
  
  # Spotify API
  SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
  SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
  SPOTIFY_CALLBACK_URL: ${{ secrets.SPOTIFY_CALLBACK_URL }}
  
  # Genius API
  GENIUS_CLIENT_ID: ${{ secrets.GENIUS_CLIENT_ID }}
  GENIUS_CLIENT_SECRET: ${{ secrets.GENIUS_CLIENT_SECRET }}
  GENIUS_CALLBACK_URL: ${{ secrets.GENIUS_CALLBACK_URL }}
  
  # IBM Watson NLU
  WATSON_API_KEY: ${{ secrets.WATSON_API_KEY }}
  WATSON_SERVICE_URL: ${{ secrets.WATSON_SERVICE_URL }}
  
  # Flask App
  FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
  FLASK_ENV: production
  FLASK_DEBUG: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.6.0'
    
    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.APP_NAME }}:${{ github.sha }} src/api/
        docker tag ${{ env.APP_NAME }}:${{ github.sha }} ${{ env.APP_NAME }}acrprod.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
        az acr login --name ${{ env.APP_NAME }}acrprod
        docker push ${{ env.APP_NAME }}acrprod.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
    
    - name: Terraform Init
      working-directory: infra/terraform
      run: terraform init
    
    - name: Terraform Plan
      working-directory: infra/terraform
      run: terraform plan -var="image_tag=${{ github.sha }}" -var="subscription_id=${{ env.AZURE_SUBSCRIPTION_ID }}" -out=tfplan
    
    - name: Terraform Apply
      working-directory: infra/terraform
      run: terraform apply tfplan
    
    - name: Output FQDN
      working-directory: infra/terraform
      run: |
        echo "Container App FQDN: $(terraform output -raw container_app_fqdn)"
